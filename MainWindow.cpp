/*
	Copyright (C) 2014 George White.
	Licensed under the MIT license.
	Made for Haiku.
*/

#include <MenuBar.h>
#include <Menu.h>
#include <MenuItem.h>
#include <GroupLayout.h>
#include <GroupView.h>
#include <Bitmap.h>
#include <StringView.h>
#include <IconUtils.h>
#include <Font.h>
#include <Button.h>
#include <AppKit.h>
#include "MainWindow.h"
#include "SelectionWindow.h"

// Placeholder
const unsigned char rainIcon[] = {
	0x6e, 0x63, 0x69, 0x66, 0x06, 0x04, 0x00, 0x6e, 0x05, 0x76, 0x05, 0xec,
	0x04, 0x01, 0xbe, 0x03, 0x28, 0x62, 0x87, 0x03, 0xb9, 0xd6, 0xec, 0x03,
	0x02, 0x08, 0x2c, 0x54, 0x2a, 0x54, 0x2f, 0x54, 0x4c, 0x54, 0x4c, 0x54,
	0x4f, 0x54, 0x50, 0x50, 0x50, 0x53, 0x50, 0x4d, 0x4c, 0x4c, 0x4f, 0x4c,
	0x4c, 0x48, 0x44, 0x4c, 0x44, 0x47, 0x44, 0x45, 0x38, 0x40, 0x3f, 0x40,
	0x31, 0x40, 0x2c, 0x4c, 0x2c, 0x45, 0x2a, 0x4c, 0x28, 0x50, 0x28, 0x4e,
	0x28, 0x52, 0x02, 0x08, 0x49, 0x3b, 0x49, 0x3b, 0x4c, 0x3b, 0x4d, 0x37,
	0x4d, 0x3a, 0x4d, 0x34, 0x49, 0x33, 0x4c, 0x33, 0x49, 0x2f, 0x41, 0x33,
	0x41, 0x2e, 0x41, 0x2c, 0x35, 0x27, 0x3c, 0x27, 0x2e, 0x27, 0x29, 0x33,
	0x29, 0x2c, 0x27, 0x33, 0x25, 0x37, 0x25, 0x35, 0x25, 0x39, 0x29, 0x3b,
	0x27, 0x3b, 0x2c, 0x3b, 0x02, 0x04, 0x41, 0x2d, 0x4a, 0x31, 0x38, 0x31,
	0x31, 0x48, 0x31, 0xbf, 0x6a, 0x31, 0xc6, 0x75, 0x41, 0x58, 0xbc, 0xa0,
	0x58, 0xc3, 0xab, 0x58, 0x51, 0x48, 0x51, 0xc6, 0x75, 0x51, 0xbf, 0x6a,
	0x21, 0x0a, 0x00, 0x01, 0x00, 0x12, 0x40, 0x91, 0x8c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x40, 0x91, 0x8c, 0x3f, 0x74, 0x1e, 0xca, 0x3f, 0x5a,
	0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x00, 0x01, 0x01, 0x12, 0x3f, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0xbc, 0x00,
	0xe7, 0x47, 0x8f, 0xfe, 0x01, 0x17, 0x86, 0x00, 0x04, 0x0a, 0x01, 0x01,
	0x00, 0x12, 0x40, 0x91, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
	0x91, 0x8c, 0xc1, 0x69, 0x09, 0xca, 0x68, 0x73, 0x01, 0x17, 0x84, 0x00,
	0x04, 0x0a, 0x02, 0x01, 0x00, 0x02, 0x40, 0x91, 0x8c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x40, 0x91, 0x8c, 0xc1, 0x69, 0x09, 0xca, 0x68, 0x73,
	0x0a, 0x01, 0x01, 0x01, 0x12, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3f, 0x00, 0x00, 0xc2, 0x40, 0x1c, 0x47, 0x0f, 0xfe, 0x01,
	0x17, 0x86, 0x00, 0x04, 0x0a, 0x02, 0x01, 0x01, 0x02, 0x3f, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0xc2, 0x40, 0x1c,
	0x47, 0x0f, 0xfe, 0x0a, 0x03, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8,
	0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x45, 0x1d, 0x90, 0x4a,
	0x79, 0x5f, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x04, 0x01, 0x02, 0x12,
	0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05,
	0x44, 0xd8, 0x3b, 0x4a, 0x75, 0x6a, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a,
	0x05, 0x01, 0x02, 0x02, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a,
	0x8f, 0x3b, 0x28, 0x05, 0x44, 0xd8, 0x3b, 0x4a, 0x75, 0x6a, 0x0a, 0x03,
	0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f,
	0x3b, 0x28, 0x05, 0x48, 0x67, 0x64, 0x4a, 0xa9, 0x5f, 0x01, 0x17, 0x84,
	0x00, 0x04, 0x0a, 0x04, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a,
	0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x48, 0x56, 0x0e, 0x4a, 0xa5,
	0x6a, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x05, 0x01, 0x02, 0x02, 0x3b,
	0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x48,
	0x56, 0x0e, 0x4a, 0xa5, 0x6a, 0x0a, 0x03, 0x01, 0x02, 0x12, 0x3b, 0x28,
	0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0x13,
	0xb2, 0x4a, 0xf9, 0x5f, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x04, 0x01,
	0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b,
	0x28, 0x05, 0x4a, 0x0b, 0x07, 0x4a, 0xf5, 0x6a, 0x01, 0x17, 0x84, 0x00,
	0x04, 0x0a, 0x05, 0x01, 0x02, 0x02, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f,
	0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0x0b, 0x07, 0x4a, 0xf5, 0x6a,
	0x0a, 0x03, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38,
	0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0x93, 0xb2, 0x4a, 0x69, 0x5f, 0x01,
	0x17, 0x84, 0x00, 0x04, 0x0a, 0x04, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05,
	0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0x8b, 0x07,
	0x4a, 0x65, 0x6a, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x05, 0x01, 0x02,
	0x02, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28,
	0x05, 0x4a, 0x8b, 0x07, 0x4a, 0x65, 0x6a, 0x0a, 0x03, 0x01, 0x02, 0x12,
	0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05,
	0x46, 0x8e, 0xc8, 0x4b, 0x49, 0x5f, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a,
	0x04, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a,
	0x8f, 0x3b, 0x28, 0x05, 0x46, 0x6c, 0x1d, 0x4b, 0x45, 0x6a, 0x01, 0x17,
	0x84, 0x00, 0x04, 0x0a, 0x05, 0x01, 0x02, 0x02, 0x3b, 0x28, 0x05, 0xb8,
	0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x46, 0x6c, 0x1d, 0x4b,
	0x45, 0x6a, 0x0a, 0x03, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a,
	0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x49, 0xa7, 0x64, 0x4a, 0x39,
	0x5f, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x04, 0x01, 0x02, 0x12, 0x3b,
	0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x49,
	0x96, 0x0e, 0x4a, 0x35, 0x6a, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x05,
	0x01, 0x02, 0x02, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f,
	0x3b, 0x28, 0x05, 0x49, 0x96, 0x0e, 0x4a, 0x35, 0x6a, 0x0a, 0x03, 0x01,
	0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b,
	0x28, 0x05, 0x4a, 0xe3, 0xb2, 0x4b, 0x39, 0x5f, 0x01, 0x17, 0x84, 0x00,
	0x04, 0x0a, 0x04, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f,
	0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0xdb, 0x07, 0x4b, 0x35, 0x6a,
	0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x05, 0x01, 0x02, 0x02, 0x3b, 0x28,
	0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x4a, 0xdb,
	0x07, 0x4b, 0x35, 0x6a, 0x0a, 0x03, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05,
	0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x49, 0x07, 0x64,
	0x4b, 0x59, 0x5f, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x04, 0x01, 0x02,
	0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28,
	0x05, 0x48, 0xf6, 0x0e, 0x4b, 0x55, 0x6a, 0x01, 0x17, 0x84, 0x00, 0x04,
	0x0a, 0x05, 0x01, 0x02, 0x02, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38,
	0x5a, 0x8f, 0x3b, 0x28, 0x05, 0x48, 0xf6, 0x0e, 0x4b, 0x55, 0x6a, 0x0a,
	0x03, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a,
	0x8f, 0x3b, 0x28, 0x05, 0xbf, 0x13, 0x7f, 0x4a, 0xf9, 0x5f, 0x01, 0x17,
	0x84, 0x00, 0x04, 0x0a, 0x04, 0x01, 0x02, 0x12, 0x3b, 0x28, 0x05, 0xb8,
	0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05, 0xc0, 0x9f, 0x13, 0x4a,
	0xf5, 0x6a, 0x01, 0x17, 0x84, 0x00, 0x04, 0x0a, 0x05, 0x01, 0x02, 0x02,
	0x3b, 0x28, 0x05, 0xb8, 0x5a, 0x8f, 0x38, 0x5a, 0x8f, 0x3b, 0x28, 0x05,
	0xc0, 0x9f, 0x13, 0x4a, 0xf5, 0x6a
};

BMenuBar* MainWindow::PrepareMenuBar(void) {
	BMenuBar *menubar = new BMenuBar("menu");
	BMenu *menu = new BMenu("Edit");
	
	menu->AddItem(new BMenuItem("Refresh", NULL, 'r'));
	
	BMessage *msg = new BMessage(25);
	menu->AddItem(new BMenuItem("Change location", msg, NULL, NULL));
	
	menubar->AddItem(menu);
	
	return menubar;
}

MainWindow::MainWindow(void) : BWindow(
								BRect(50, 50, 0, 0),
								"Weather",
								B_TITLED_WINDOW,
								B_ASYNCHRONOUS_CONTROLS |
								B_QUIT_ON_WINDOW_CLOSE  |
								B_AUTO_UPDATE_SIZE_LIMITS) {
	BGroupLayout* root = new BGroupLayout(B_VERTICAL);
	root->SetSpacing(0);
	this->SetLayout(root);
	view = new BGridView(3, 3);
	layout = view->GridLayout();
	layout->SetInsets(5);
	BMenuBar *menubar = PrepareMenuBar();
	this->AddChild(menubar);
	this->AddChild(view);
	
	// Icon for weather
	BButton *weatherButton = new BButton("");
	BBitmap *rainBitmap = new BBitmap(BRect(0, 0, 128, 128), NULL, B_RGBA32);
	BIconUtils::GetVectorIcon(rainIcon, sizeof(rainIcon), rainBitmap);
	weatherButton->SetIcon(rainBitmap);
	layout->AddView(weatherButton, (int32) 0, (int32) 0);
	
	BGroupView *infoView = new BGroupView(B_VERTICAL);
	BGroupLayout *infoLayout = infoView->GroupLayout();
	infoLayout->SetInsets(16);
	layout->AddView(infoView, (int32) 1, (int32) 0);
	
	// Description (e.g. "Mostly showers", "Cloudy", "Sunny").
	BFont *bold_font = new BFont(be_bold_font);
	bold_font->SetSize(24);
	BStringView *desc = new BStringView("description", "Mostly showers.");
	desc->SetFont(bold_font);
	infoLayout->AddView(desc);
	
	// Numbers (e.g. temperature etc.)
	BGroupView *numberView = new BGroupView(B_HORIZONTAL);
	BGroupLayout *numberLayout = numberView->GroupLayout();
	infoLayout->AddView(numberView);
	
	// Temperature (e.g. high 32 degrees C)
	numberLayout->AddView(new BStringView("high temperature", "high 32°C"));
	numberLayout->AddView(new BStringView("low temperature", "low 27°C"));
	
	// Precipitation (e.g. 30%)
	numberLayout->AddView(new BStringView("precipitation", "30% precipitation"));
	
}

void MainWindow::MessageReceived(BMessage *msg) {
	switch (msg->what) {
		case 25: {
			(new SelectionWindow())->Show();
		}
		
		default: {
			// BWindow::MessageRecieved(msg);
			break;
		}
	}
}

